[{"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx":"1","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx":"2","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts":"3","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/GlobalStyle.ts":"4","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx":"5","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx":"6","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts":"7","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts":"8","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx":"9","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx":"10","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx":"11","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx":"12","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx":"13","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx":"14","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx":"15","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/LoginGoogle.tsx":"16"},{"size":467,"mtime":1612081204843,"results":"17","hashOfConfig":"18"},{"size":491,"mtime":1612078985016,"results":"19","hashOfConfig":"18"},{"size":287,"mtime":1611586275105,"results":"20","hashOfConfig":"18"},{"size":162,"mtime":1611405555579,"results":"21","hashOfConfig":"18"},{"size":291,"mtime":1612353398988,"results":"22","hashOfConfig":"18"},{"size":688,"mtime":1612078991920,"results":"23","hashOfConfig":"18"},{"size":624,"mtime":1611575582343,"results":"24","hashOfConfig":"18"},{"size":678,"mtime":1611586275104,"results":"25","hashOfConfig":"18"},{"size":352,"mtime":1612023601701,"results":"26","hashOfConfig":"18"},{"size":434,"mtime":1612023601701,"results":"27","hashOfConfig":"18"},{"size":1812,"mtime":1612023601700,"results":"28","hashOfConfig":"18"},{"size":1849,"mtime":1612023601700,"results":"29","hashOfConfig":"18"},{"size":2773,"mtime":1612028167779,"results":"30","hashOfConfig":"18"},{"size":551,"mtime":1611674992282,"results":"31","hashOfConfig":"18"},{"size":2864,"mtime":1612356984171,"results":"32","hashOfConfig":"18"},{"size":920,"mtime":1611674992280,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"df35y4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx",[],["70","71"],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/GlobalStyle.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx",["72","73"],"import React, { useState } from 'react';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\"\nimport axios from 'axios';\n\n\nconst Inbox = () => {\n    const [addData, setAddData] = useState(2);\n    const [prevData, setPrevData] = useState(0);\n    const [data, setData] = useState(addData); // 2 or 4\n    const [hasMore, setHasMore] = useState(true);\n    const [items, setItems] = useState([] as any);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            axios.get(`https://koreanjson.com/todos`)\n                .then((res) => {\n                    let fourData = res.data.slice(prevData, data);\n                    setItems([...items, ...fourData]);\n                    setPrevData(prevData + addData);\n                    setData(data + addData);\n                })\n        }, 1000);\n    }\n    return (\n        <InboxGrid style={{ overflow: \"scroll\" }} id=\"scrollInbox\">\n            {/* 이 공간이 채워져야 스크롤이 생깁니다. */}\n            <InfiniteScroll\n                dataLength={items.length} //This is important field to render the next data\n                next={fetchMoreData}\n                hasMore={hasMore}\n                loader={<h4>Loading...</h4>}\n                scrollableTarget=\"scrollInbox\"\n            >\n                {items && items.map((data: object | any, i: number) => {\n                    let title = data.title;\n                    return (\n                        <div key={i}>\n                            {title}\n                        </div>\n                    )\n                })}\n            </InfiniteScroll>\n        </InboxGrid>\n    );\n};\n\n\nconst InboxGrid = styled.section`\n    grid-column: 1;\n    grid-row: 2/3;\n    border: 1px solid;\n    border-color: green;\n`\n\nexport default Inbox;","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx",["74","75"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport styled from 'styled-components'\n\n\nconst KanbanBoard = () => {\n    const [addData, setAddData] = useState(2);\n    const [prevData, setPrevData] = useState(0);\n    const [data, setData] = useState(addData); // 2 or 4\n    const [hasMore, setHasMore] = useState(true);\n    const [items, setItems] = useState([] as any);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            axios.get(`https://koreanjson.com/todos`)\n                .then((res) => {\n                    let fourData = res.data.slice(prevData, data);\n                    setItems([...items, ...fourData]);\n                    setPrevData(prevData + addData);\n                    setData(data + addData);\n                })\n        }, 1000);\n    }\n    return (\n        <KanbanBoardGrid style={{ overflow: \"scroll\" }} id=\"scrollHeader\">\n            {/* 이 공간이 채워져야 스크롤이 생깁니다. */}\n            <InfiniteScroll\n                dataLength={items.length} //This is important field to render the next data\n                next={fetchMoreData}\n                hasMore={hasMore}\n                loader={<h4>Loading...</h4>}\n                scrollableTarget=\"scrollHeader\"\n            >\n                {items && items.map((data: object | any, i: number) => {\n                    let title = data.title;\n                    return (\n                        <div key={i}>\n                            {title}\n                        </div>\n                    )\n                })}\n            </InfiniteScroll>\n        </KanbanBoardGrid>\n    );\n};\n\n\nconst KanbanBoardGrid = styled.section`\n    grid-column: 2;\n    grid-row: 2/3;\n    border: 1px solid;\n    border-color: pink;\n    \n`\n\nexport default KanbanBoard;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx",["76","77","78"],"import React, { useEffect, useState } from \"react\";\nimport useModal from \"../../hooks/useModal\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nModal.setAppElement(\"#root\");\ntype Clip = {\n  title: string;\n  url: string;\n  discription: string;\n};\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst ClipAddButton = () => {\n  const data: Clip[] = [];\n  const { isOpen, onOpen, onClose } = useModal();\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    url: \"\",\n    discription: \"\",\n  });\n  const [clipData, setClipData] = useState<Clip[]>([]);\n  const { title, url, discription } = inputs;\n  const onClick = () => {\n    console.log(\"클립 생성!\", inputs);\n    let temp = clipData.slice();\n    temp.push(inputs);\n    setClipData(temp);\n    console.log(data, \"data check\");\n    onClose();\n    onReset();\n    return data;\n  };\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    const nextInputs = {\n      ...inputs,\n      [name]: value,\n    };\n    console.log(nextInputs);\n    setInputs(nextInputs);\n  };\n  const onReset = () => {\n    const resetInputs = {\n      title: \"\",\n      url: \"\",\n      discription: \"\",\n    };\n    setInputs(resetInputs);\n  };\n  return (\n    <>\n      <button onClick={onOpen}>+</button>\n      {clipData.length === 0 ? (\n        <div></div>\n      ) : (\n        clipData.map((clip: Clip, idx: number) => {\n          console.log(clip, \"clip\");\n          return (\n            <Clip key={idx}>\n              <div>{clip.title}</div>\n              <a href={clip.url} target=\"_blank\">\n                링크\n              </a>\n              <div>{clip.discription}</div>\n              <button>삭제</button>\n              <button>수정</button>\n            </Clip>\n          );\n        })\n      )}\n      <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n        <div>\n          <input\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={onChange}\n            value={title}\n          ></input>\n        </div>\n        <div>\n          <input\n            name=\"url\"\n            placeholder=\"Url\"\n            onChange={onChange}\n            value={url}\n          ></input>\n        </div>\n        <div>\n          <input\n            placeholder=\"Discription\"\n            name=\"discription\"\n            onChange={onChange}\n            value={discription}\n          ></input>\n        </div>\n        <button onClick={onClose}>취소</button>\n        <button onClick={onClick}>생성</button>\n      </Modal>\n    </>\n  );\n};\nconst Clip = styled.div`\n  border: 1px solid;\n  border-color: green;\n`;\nexport default ClipAddButton;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/LoginGoogle.tsx",["79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":21,"nodeType":"87","messageId":"88","endLine":8,"endColumn":31},{"ruleId":"85","severity":1,"message":"89","line":11,"column":21,"nodeType":"87","messageId":"88","endLine":11,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":8,"column":21,"nodeType":"87","messageId":"88","endLine":8,"endColumn":31},{"ruleId":"85","severity":1,"message":"89","line":11,"column":21,"nodeType":"87","messageId":"88","endLine":11,"endColumn":31},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":69,"column":15,"nodeType":"93","endLine":69,"endColumn":50},{"ruleId":"94","severity":1,"message":"95","line":110,"column":7,"nodeType":"87","messageId":"96","endLine":110,"endColumn":11},{"ruleId":"85","severity":1,"message":"97","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"98","line":10,"column":19,"nodeType":"87","messageId":"88","endLine":10,"endColumn":26},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'setAddData' is assigned a value but never used.","Identifier","unusedVar","'setHasMore' is assigned a value but never used.","'useEffect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","@typescript-eslint/no-redeclare","'Clip' is already defined.","redeclared","'axios' is defined but never used.","'profile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]