[{"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx":"1","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx":"2","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts":"3","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/style/GlobalStyle.ts":"4","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx":"5","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx":"6","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts":"7","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Url.ts":"8","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts":"9","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Title.ts":"10","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/PrivateClip.ts":"11","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Discription.ts":"12","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx":"13","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx":"14","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx":"15","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx":"16","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx":"17","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Setting.tsx":"18","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ToggleProject.tsx":"19","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/style/StickyNote.ts":"20","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/usePrivateClip.tsx":"21","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx":"22","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Clip.tsx":"23","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useInput.tsx":"24","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx":"25","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/stories/Button.tsx":"26","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateKanban.tsx":"27"},{"size":627,"mtime":1614493763951,"results":"28","hashOfConfig":"29"},{"size":538,"mtime":1613355635329,"results":"30","hashOfConfig":"29"},{"size":529,"mtime":1612421146603,"results":"31","hashOfConfig":"29"},{"size":163,"mtime":1612834690465,"results":"32","hashOfConfig":"29"},{"size":369,"mtime":1612834690465,"results":"33","hashOfConfig":"29"},{"size":647,"mtime":1612700008043,"results":"34","hashOfConfig":"29"},{"size":624,"mtime":1611575582343,"results":"35","hashOfConfig":"29"},{"size":450,"mtime":1612421146602,"results":"36","hashOfConfig":"29"},{"size":678,"mtime":1611586275104,"results":"37","hashOfConfig":"29"},{"size":476,"mtime":1612421146601,"results":"38","hashOfConfig":"29"},{"size":2330,"mtime":1612830602802,"results":"39","hashOfConfig":"29"},{"size":554,"mtime":1612421146601,"results":"40","hashOfConfig":"29"},{"size":288,"mtime":1612600216956,"results":"41","hashOfConfig":"29"},{"size":797,"mtime":1614675617019,"results":"42","hashOfConfig":"29"},{"size":1685,"mtime":1612834997432,"results":"43","hashOfConfig":"29"},{"size":605,"mtime":1612834690464,"results":"44","hashOfConfig":"29"},{"size":2828,"mtime":1613355635327,"results":"45","hashOfConfig":"29"},{"size":1348,"mtime":1613355635328,"results":"46","hashOfConfig":"29"},{"size":1446,"mtime":1613355635329,"results":"47","hashOfConfig":"29"},{"size":1095,"mtime":1612834690465,"results":"48","hashOfConfig":"29"},{"size":976,"mtime":1612830602801,"results":"49","hashOfConfig":"29"},{"size":3984,"mtime":1613355635326,"results":"50","hashOfConfig":"29"},{"size":4213,"mtime":1613355635326,"results":"51","hashOfConfig":"29"},{"size":1048,"mtime":1612421146600,"results":"52","hashOfConfig":"29"},{"size":551,"mtime":1611674992282,"results":"53","hashOfConfig":"29"},{"size":941,"mtime":1610259752600,"results":"54","hashOfConfig":"29"},{"size":2827,"mtime":1614675806609,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"df35y4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx",[],["117","118"],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/style/GlobalStyle.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Url.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Title.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/PrivateClip.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Discription.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx",["119","120","121","122"],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx",["123","124"],"import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Clip from \"../../../components/atoms/Clip\";\nimport ClipAddButton from \"../../../components/atoms/ClipAddButton\";\nimport usePrivateClip from \"../../../hooks/usePrivateClip\";\nimport { Input } from \"../../../modules/PrivateClip\";\nimport { useDrop } from \"react-dnd\";\nimport update from \"immutability-helper\";\n\nconst PrivateClip = () => {\n  const { privateClipArr, changePrivateClip } = usePrivateClip();\n  const findCard = (id: string) => {\n    const clip = privateClipArr.filter((c) => `${c.id}` === id)[0];\n    return {\n      clip,\n      index: privateClipArr.indexOf(clip),\n    };\n  };\n  const moveClip = (id: string, atIndex: number) => {\n    const { clip, index } = findCard(id);\n    changePrivateClip(\n      update(privateClipArr, {\n        $splice: [\n          [index, 1],\n          [atIndex, 0, clip],\n        ],\n      }),\n    );\n  };\n  const ItemTypes = { CLIP: \"clip\" };\n  const [, drop] = useDrop({ accept: ItemTypes.CLIP });\n\n  return (\n    <PrivateClipGrid ref={drop}>\n      <ClipAddButton />\n      {privateClipArr.map((clip: Input, idx: number) => {\n        return (\n          <Clip\n            key={idx}\n            title={clip.title}\n            id={`${clip.id}`}\n            url={clip.url}\n            discription={clip.discription}\n            moveClip={moveClip}\n            findClip={findCard}\n          />\n        );\n      })}\n    </PrivateClipGrid>\n  );\n};\n\nconst PrivateClipGrid = styled.section`\n  border: 1px solid;\n  border-color: red;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport default PrivateClip;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx",["125","126"],"import React, { useState } from 'react';\nimport styled from \"styled-components\"\nimport { Note, Tape, NoteList } from \"../../../style/StickyNote\";\nimport axios from 'axios';\n\n\nconst Inbox = () => {\n    return (\n        <InboxGrid>\n            <Note>\n                <Tape></Tape>\n                <NoteList>\n                    <li>Test StickyNote </li>\n                    <li>포스트잇 테스트</li>\n                </NoteList>\n            </Note>\n        </InboxGrid>\n    )\n};\n\nconst InboxGrid = styled.section`\n    width: 30%;\n    border: 1px solid;\n    border-color: green;\n`\n\nexport default Inbox;","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Setting.tsx",["127","128"],"\nimport React from 'react';\nimport LoginGoogle from \"../atoms/LoginGoogle\"\n\nimport {\n  Button,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerProps,\n  Icon,\n  Input,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { MdSettings } from \"react-icons/md\";\nimport { Drawer } from \"@chakra-ui/react\";\n\nconst Setting = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n\n\n  return (\n    <>\n      <Button ref={btnRef} colorScheme=\"teal\" onClick={() => onOpen()}>\n        <Icon as={MdSettings} />\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader>Create your account</DrawerHeader>\n            <DrawerBody>\n              <Input placeholder=\"Type here...\" />\n            </DrawerBody>\n            <DrawerFooter>\n              <Button variant=\"outline\" mr={3} onClick={() => onClose()}>\n                Cancel\n              </Button>\n              <Button color=\"blue\">Save</Button>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </>\n  );\n\n};\n\nexport default Setting;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ToggleProject.tsx",["129"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Menu, MenuButton, MenuList, MenuItem, Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\n\nconst ToggleProject = () => {\n  const [select, setSelect] = useState(\"Your Project\");\n  const toggle = React.useRef<HTMLButtonElement>(null);\n\n  const handleProject = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const { value } = e.target as HTMLButtonElement;\n    setSelect(value);\n  };\n  // const fetchProject = () => {\n  //     axios.get(`test`)\n  //         .then((res) => {\n  //             return res.data\n  //         })\n  // }\n  console.log(select);\n  return (\n    <>\n      <Menu>\n        {/* <MenuButton onClick={fetchProject} ref={toggle} as={Button} mr={3} rightIcon={<ChevronDownIcon />}> */}\n        <MenuButton\n          ref={toggle}\n          as={Button}\n          mr={3}\n          rightIcon={<ChevronDownIcon />}\n        >\n          {select}\n        </MenuButton>\n        <MenuList onClick={() => handleProject}>\n          <MenuItem value=\"Download\">Download</MenuItem>\n          <MenuItem value=\"Create a Copy\">Create a Copy</MenuItem>\n          <MenuItem value=\"Mark as Draft\">Mark as Draft</MenuItem>\n          <MenuItem value=\"Delete\">Delete</MenuItem>\n          <MenuItem value=\"Attend a Workshop\">Attend a Workshop</MenuItem>\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\nexport default ToggleProject;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/style/StickyNote.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/usePrivateClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx",["130","131","132"],"import React, { useState } from \"react\";\nimport useModal from \"../../hooks/useModal\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n} from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\nimport useInput from \"../../hooks/useInput\";\nimport usePrivateClip from \"../../hooks/usePrivateClip\";\n\ninterface Input {\n  id: number;\n  title: string;\n  url: string;\n  discription: string;\n}\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst ClipAddButton = () => {\n  const { isOpen, onOpen, onClose } = useModal();\n  const { privateClipArr, addPrivateClip } = usePrivateClip();\n  const {\n    titleState,\n    urlState,\n    discriptionState,\n    makeTitle,\n    makeUrl,\n    makeDiscription,\n  } = useInput();\n  const [switchClip, setSwitchClip] = useState(false);\n\n  const onClick = () => {\n    const obj = {\n      id: 1,\n      title: titleState,\n      url: urlState,\n      discription: discriptionState,\n    };\n    addPrivateClip(obj);\n    onClose();\n  };\n  const openModal = () => {\n    onOpen();\n    makeTitle(\"\");\n    makeUrl(\"\");\n    makeDiscription(\"\");\n  };\n\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"title\") {\n      makeTitle(value);\n    } else if (name === \"url\") {\n      makeUrl(value);\n    } else if (name === \"discription\") {\n      makeDiscription(value);\n    }\n  };\n  const initialRef = React.useRef<HTMLInputElement>(null);\n  const finalRef = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <PrivateClipWrapper>\n      <button onClick={() => openModal()}>+</button>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add modal</ModalHeader>\n          <ModalBody pb={1}>\n            <Switch\n              size={\"md\"}\n              pb={3}\n              onChange={() => {\n                setSwitchClip(!switchClip);\n              }}\n            >\n              스위치\n            </Switch>\n            {switchClip ? (\n              <FormControl>\n                <FormLabel>Memo </FormLabel>\n                <Input\n                  placeholder=\"Memo\"\n                  name=\"discription\"\n                  onChange={onChange}\n                ></Input>\n              </FormControl>\n            ) : (\n              <div>\n                <FormControl pb={5}>\n                  <FormLabel>Title</FormLabel>\n                  <Input\n                    name=\"title\"\n                    placeholder=\"Title을 입력하세요\"\n                    onChange={onChange}\n                  ></Input>\n                </FormControl>\n                <FormControl pb={5}>\n                  <FormLabel>Url</FormLabel>\n                  <Input\n                    name=\"url\"\n                    placeholder=\"Url을 입력하세요\"\n                    onChange={onChange}\n                  ></Input>\n                </FormControl>\n                <FormControl pb={5}>\n                  <FormLabel>Discription</FormLabel>\n                  <Input\n                    placeholder=\"Discription을 입력하세요\"\n                    name=\"discription\"\n                    onChange={onChange}\n                  ></Input>\n                </FormControl>\n              </div>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button mr={3} colorScheme=\"facebook\" onClick={onClick}>\n              생성\n            </Button>\n            <Button onClick={() => onClose()}>취소</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </PrivateClipWrapper>\n  );\n};\nconst PrivateClipWrapper = styled.div`\n  border: 1px solid;\n  border-color: red;\n  width: 100px;\n`;\nexport default ClipAddButton;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Clip.tsx",["133","134"],"import React, { useState } from \"react\";\nimport useInput from \"../../hooks/useInput\";\nimport useModal from \"../../hooks/useModal\";\nimport usePrivateClip from \"../../hooks/usePrivateClip\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\n\nModal.setAppElement(\"#root\");\n\ntype Clipinput = {\n  id: string;\n  title: string;\n  url: string;\n  discription: string;\n  moveClip: (id: string, to: number) => void;\n  findClip: (id: string) => { index: number };\n};\ntype Item = {\n  type: string;\n  id: string;\n  originalIndex: string;\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst Clip = ({\n  id,\n  title,\n  url,\n  discription,\n  moveClip,\n  findClip,\n}: Clipinput) => {\n  const originalIndex = findClip(id).index;\n  const ItemTypes = { CLIP: \"clip\" };\n  const { deletePrivateClip, editPrivateClip } = usePrivateClip();\n  const [editModal, setEditModal] = useState(false);\n  const [switchClip, setSwitchClip] = useState(false);\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CLIP, id, originalIndex },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const { id: droppedId, originalIndex } = monitor.getItem();\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        moveClip(droppedId, originalIndex);\n      }\n    },\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.CLIP,\n    canDrop: () => false,\n    hover({ id: draggedId }: Item) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findClip(id);\n        moveClip(draggedId, overIndex);\n      }\n    },\n  });\n  const opacity = isDragging ? 0 : 1;\n\n  const {\n    titleState,\n    urlState,\n    discriptionState,\n    makeDiscription,\n    makeTitle,\n    makeUrl,\n  } = useInput();\n  const editClip = () => {\n    const obj = {\n      id: Number(id),\n      title: titleState,\n      url: urlState,\n      discription: discriptionState,\n    };\n    editPrivateClip(obj);\n    setEditModal(false);\n  };\n  const openModal = () => {\n    setEditModal(true);\n    makeTitle(\"\");\n    makeUrl(\"\");\n    makeDiscription(\"\");\n  };\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"title\") {\n      makeTitle(value);\n    } else if (name === \"url\") {\n      makeUrl(value);\n    } else if (name === \"discription\") {\n      makeDiscription(value);\n    }\n  };\n  return (\n    <ClipWrapper ref={(node) => drag(drop(node))}>\n      <div>{title}</div>\n\n      <button onClick={() => openModal()}>edit</button>\n      <button onClick={() => deletePrivateClip(Number(id))}>delete</button>\n      <Modal\n        isOpen={editModal}\n        onRequestClose={() => setEditModal(false)}\n        style={customStyles}\n      >\n        <div>Edit modal</div>\n        <button\n          onClick={() => {\n            setSwitchClip(!switchClip);\n          }}\n        >\n          스위치\n        </button>\n        {switchClip ? (\n          <div>\n            <div>\n              <input\n                placeholder=\"Memo\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              <input\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={onChange}\n              ></input>\n            </div>\n            <div>\n              <input name=\"url\" placeholder=\"Url\" onChange={onChange}></input>\n            </div>\n            <div>\n              <input\n                placeholder=\"Discription\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        )}\n\n        <button\n          onClick={() => {\n            setEditModal(false);\n          }}\n        >\n          취소\n        </button>\n        <button onClick={() => editClip()}>생성</button>\n      </Modal>\n    </ClipWrapper>\n  );\n};\n\nconst ClipWrapper = styled.div`\n  border: 1px solid;\n  border-color: aqua;\n`;\n\nexport default Clip;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useInput.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/stories/Button.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateKanban.tsx",["135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":3,"column":27,"nodeType":"142","messageId":"143","endLine":3,"endColumn":36},{"ruleId":"140","severity":1,"message":"146","line":3,"column":38,"nodeType":"142","messageId":"143","endLine":3,"endColumn":47},{"ruleId":"140","severity":1,"message":"147","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":28},{"ruleId":"140","severity":1,"message":"144","line":1,"column":30,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"148","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":19},{"ruleId":"140","severity":1,"message":"149","line":13,"column":3,"nodeType":"142","messageId":"143","endLine":13,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":20,"column":11,"nodeType":"142","messageId":"152","endLine":20,"endColumn":16},{"ruleId":"140","severity":1,"message":"153","line":27,"column":7,"nodeType":"142","messageId":"143","endLine":27,"endColumn":19},{"ruleId":"140","severity":1,"message":"154","line":39,"column":11,"nodeType":"142","messageId":"143","endLine":39,"endColumn":25},{"ruleId":"140","severity":1,"message":"155","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"156","line":72,"column":9,"nodeType":"142","messageId":"143","endLine":72,"endColumn":16},{"ruleId":"140","severity":1,"message":"157","line":21,"column":11,"nodeType":"142","messageId":"143","endLine":21,"endColumn":20},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'useCallback' is defined but never used.","'LoginGoogle' is defined but never used.","'DrawerProps' is defined but never used.","@typescript-eslint/no-redeclare","'Input' is already defined.","redeclared","'customStyles' is assigned a value but never used.","'privateClipArr' is assigned a value but never used.","'useModal' is defined but never used.","'opacity' is assigned a value but never used.","'kanbanBtn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]