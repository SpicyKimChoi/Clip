[{"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx":"1","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx":"2","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts":"3","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/GlobalStyle.ts":"4","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx":"5","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx":"6","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts":"7","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts":"8","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx":"9","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx":"10","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx":"11","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx":"12","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx":"13","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx":"14","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx":"15","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/LoginGoogle.tsx":"16","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ToggleProject.tsx":"17","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Discription.ts":"18","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/PrivateClip.ts":"19","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Url.ts":"20","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Title.ts":"21","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/usePrivateClip.tsx":"22","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Clip.tsx":"23","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useInput.tsx":"24","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Setting.tsx":"25"},{"size":467,"mtime":1612081204843,"results":"26","hashOfConfig":"27"},{"size":526,"mtime":1612600216955,"results":"28","hashOfConfig":"27"},{"size":529,"mtime":1612421146603,"results":"29","hashOfConfig":"27"},{"size":162,"mtime":1611405555579,"results":"30","hashOfConfig":"27"},{"size":369,"mtime":1612787832499,"results":"31","hashOfConfig":"27"},{"size":647,"mtime":1612700008043,"results":"32","hashOfConfig":"27"},{"size":624,"mtime":1611575582343,"results":"33","hashOfConfig":"27"},{"size":678,"mtime":1611586275104,"results":"34","hashOfConfig":"27"},{"size":288,"mtime":1612600216956,"results":"35","hashOfConfig":"27"},{"size":853,"mtime":1612600216956,"results":"36","hashOfConfig":"27"},{"size":336,"mtime":1612600216955,"results":"37","hashOfConfig":"27"},{"size":377,"mtime":1612600216956,"results":"38","hashOfConfig":"27"},{"size":2797,"mtime":1612421146597,"results":"39","hashOfConfig":"27"},{"size":551,"mtime":1611674992282,"results":"40","hashOfConfig":"27"},{"size":3139,"mtime":1612421146598,"results":"41","hashOfConfig":"27"},{"size":920,"mtime":1612490530721,"results":"42","hashOfConfig":"27"},{"size":1561,"mtime":1612707513197,"results":"43","hashOfConfig":"27"},{"size":554,"mtime":1612421146601,"results":"44","hashOfConfig":"27"},{"size":1625,"mtime":1612421146601,"results":"45","hashOfConfig":"27"},{"size":450,"mtime":1612421146602,"results":"46","hashOfConfig":"27"},{"size":476,"mtime":1612421146601,"results":"47","hashOfConfig":"27"},{"size":819,"mtime":1612421146601,"results":"48","hashOfConfig":"27"},{"size":3034,"mtime":1612421146596,"results":"49","hashOfConfig":"27"},{"size":1048,"mtime":1612421146600,"results":"50","hashOfConfig":"27"},{"size":1649,"mtime":1612787821149,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"df35y4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/index.tsx",[],["109","110"],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/pages/App.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/index.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/GlobalStyle.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/top/Header.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/Combine.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Login.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/ModalState.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PublicClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/PrivateClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/Inbox.tsx",["111","112"],"import React, { useState } from 'react';\nimport styled from \"styled-components\"\nimport axios from 'axios';\n\n\nconst Inbox = () => {\n    return (\n        <InboxGrid>\n            inbox\n        </InboxGrid>\n    )\n};\n\n\nconst InboxGrid = styled.section`\n    width: 30%;\n    border: 1px solid;\n    border-color: green;\n`\n\nexport default Inbox;","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/templates/contents/KanbanBoard.tsx",["113","114"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport styled from 'styled-components'\n\n\nconst KanbanBoard = () => {\n    return (\n        <KanbanBoardGrid>\n            KanbanBoard\n        </KanbanBoardGrid>\n    )\n};\n\n\nconst KanbanBoardGrid = styled.section`\n    width: 70%;\n    border: 1px solid;\n    border-color: pink;\n    \n`\n\nexport default KanbanBoard;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ClipAddButton.tsx",["115","116","117"],"import React, { useState } from \"react\";\nimport useModal from \"../../hooks/useModal\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nimport useInput from \"../../hooks/useInput\";\nimport usePrivateClip from \"../../hooks/usePrivateClip\";\n\nModal.setAppElement(\"#root\");\n\ninterface Input {\n  id: number;\n  title: string;\n  url: string;\n  discription: string;\n}\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst ClipAddButton = () => {\n  const { isOpen, onOpen, onClose } = useModal();\n  const { privateClipArr, addPrivateClip } = usePrivateClip();\n  const {\n    titleState,\n    urlState,\n    discriptionState,\n    makeTitle,\n    makeUrl,\n    makeDiscription,\n  } = useInput();\n  const [switchClip, setSwitchClip] = useState(false);\n\n  const onClick = () => {\n    const obj = {\n      id: 1,\n      title: titleState,\n      url: urlState,\n      discription: discriptionState,\n    };\n    addPrivateClip(obj);\n    onClose();\n  };\n  const openModal = () => {\n    onOpen();\n    makeTitle(\"\");\n    makeUrl(\"\");\n    makeDiscription(\"\");\n  };\n\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"title\") {\n      makeTitle(value);\n    } else if (name === \"url\") {\n      makeUrl(value);\n    } else if (name === \"discription\") {\n      makeDiscription(value);\n    }\n  };\n\n  return (\n    <>\n      <button onClick={openModal}>+</button>\n      <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n        <div>Add modal</div>\n        <button\n          onClick={() => {\n            setSwitchClip(!switchClip);\n          }}\n        >\n          스위치\n        </button>\n        {switchClip ? (\n          <div>\n            <div>\n              <input\n                placeholder=\"Memo\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              <input\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={onChange}\n              ></input>\n            </div>\n            <div>\n              <input name=\"url\" placeholder=\"Url\" onChange={onChange}></input>\n            </div>\n            <div>\n              <input\n                placeholder=\"Discription\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        )}\n\n        <button onClick={onClose}>취소</button>\n        <button onClick={onClick}>생성</button>\n      </Modal>\n    </>\n  );\n};\nconst Clip = styled.div`\n  border: 1px solid;\n  border-color: green;\n`;\nexport default ClipAddButton;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useModal.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/CreateProject.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/LoginGoogle.tsx",["118","119"],"import React from 'react';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport axios from 'axios';\nimport * as dotenv from 'dotenv';\ndotenv.config();\n\nconst LoginGoogle = () => {\n    const responseGoogle = (res: GoogleLoginResponse | GoogleLoginResponseOffline): void => {\n        if ('googleId' in res) {\n            const profile = res.getBasicProfile()\n            console.log(res.profileObj)\n        }\n    }\n    const responseFailGoogle = (err: any): void => {\n        console.log(err)\n    }\n    return (\n        <div>\n            <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENTID!}\n                buttonText=\"Google login\"\n                onSuccess={responseGoogle}\n                onFailure={responseFailGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n        </div>\n    );\n};\n\nexport default LoginGoogle;","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/ToggleProject.tsx",["120"],"import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Button\n} from '@chakra-ui/react';\nimport { ChevronDownIcon } from '@chakra-ui/icons'\n\n\n\nconst ToggleProject = () => {\n    const [select, setSelect] = useState(\"Your Project\")\n    const toggle = React.useRef<HTMLButtonElement>(null)\n\n    const handleProject = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const { value } = e.target as HTMLButtonElement;\n        setSelect(value)\n    }\n    // const fetchProject = () => {\n    //     axios.get(`test`)\n    //         .then((res) => {\n    //             return res.data\n    //         })\n    // }\n    console.log(select)\n    return (\n        <>\n            <Menu>\n                {/* <MenuButton onClick={fetchProject} ref={toggle} as={Button} mr={3} rightIcon={<ChevronDownIcon />}> */}\n                <MenuButton ref={toggle} as={Button} mr={3} rightIcon={<ChevronDownIcon />}>\n                    {select}\n                </MenuButton>\n                <MenuList onClick={handleProject} >\n                    <MenuItem value=\"Download\">Download</MenuItem>\n                    <MenuItem value=\"Create a Copy\">Create a Copy</MenuItem>\n                    <MenuItem value=\"Mark as Draft\">Mark as Draft</MenuItem>\n                    <MenuItem value=\"Delete\">Delete</MenuItem>\n                    <MenuItem value=\"Attend a Workshop\">Attend a Workshop</MenuItem>\n                </MenuList>\n            </Menu>\n        </>\n    );\n};\n\nexport default ToggleProject;","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Discription.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/PrivateClip.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Url.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/modules/Title.ts",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/usePrivateClip.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Clip.tsx",["121"],"import React, { useState } from \"react\";\nimport useInput from \"../../hooks/useInput\";\nimport useModal from \"../../hooks/useModal\";\nimport usePrivateClip from \"../../hooks/usePrivateClip\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\ntype Clipinput = {\n  id: number;\n  title: string;\n  url: string;\n  discription: string;\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst Clip = ({ id, title, url, discription }: Clipinput) => {\n  const { deletePrivateClip, editPrivateClip } = usePrivateClip();\n  const {\n    titleState,\n    urlState,\n    discriptionState,\n    makeDiscription,\n    makeTitle,\n    makeUrl,\n  } = useInput();\n  const [editModal, setEditModal] = useState(false);\n  const [switchClip, setSwitchClip] = useState(false);\n  const editClip = () => {\n    const obj = {\n      id: id,\n      title: titleState,\n      url: urlState,\n      discription: discriptionState,\n    };\n    editPrivateClip(obj);\n    setEditModal(false);\n  };\n  const openModal = () => {\n    setEditModal(true);\n    makeTitle(\"\");\n    makeUrl(\"\");\n    makeDiscription(\"\");\n  };\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"title\") {\n      makeTitle(value);\n    } else if (name === \"url\") {\n      makeUrl(value);\n    } else if (name === \"discription\") {\n      makeDiscription(value);\n    }\n  };\n  return (\n    <div>\n      <div>{title}</div>\n      <div>{url}</div>\n      <div>{discription}</div>\n      <button onClick={openModal}>edit</button>\n      <button onClick={() => deletePrivateClip(id)}>delete</button>\n      <Modal\n        isOpen={editModal}\n        onRequestClose={() => setEditModal(false)}\n        style={customStyles}\n      >\n        <div>Edit modal</div>\n        <button\n          onClick={() => {\n            setSwitchClip(!switchClip);\n          }}\n        >\n          스위치\n        </button>\n        {switchClip ? (\n          <div>\n            <div>\n              <input\n                placeholder=\"Memo\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              <input\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={onChange}\n              ></input>\n            </div>\n            <div>\n              <input name=\"url\" placeholder=\"Url\" onChange={onChange}></input>\n            </div>\n            <div>\n              <input\n                placeholder=\"Discription\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        )}\n\n        <button\n          onClick={() => {\n            setEditModal(false);\n          }}\n        >\n          취소\n        </button>\n        <button onClick={editClip}>생성</button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Clip;\n","/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/hooks/useInput.tsx",[],"/Users/kimhyunkyu/Desktop/sideProject/Clip/client/src/components/atoms/Setting.tsx",["122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":2,"column":17,"nodeType":"129","messageId":"130","endLine":2,"endColumn":25},{"ruleId":"127","severity":1,"message":"132","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":16},{"ruleId":"127","severity":1,"message":"133","line":29,"column":11,"nodeType":"129","messageId":"130","endLine":29,"endColumn":25},{"ruleId":"127","severity":1,"message":"134","line":118,"column":7,"nodeType":"129","messageId":"130","endLine":118,"endColumn":11},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"127","severity":1,"message":"135","line":10,"column":19,"nodeType":"129","messageId":"130","endLine":10,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"136","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":11,"column":5,"nodeType":"129","messageId":"130","endLine":11,"endColumn":16},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Input' is defined but never used.","'privateClipArr' is assigned a value but never used.","'Clip' is assigned a value but never used.","'profile' is assigned a value but never used.","'useModal' is defined but never used.","'DrawerProps' is defined but never used.","no-global-assign","no-unsafe-negation"]