
[{"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/index.tsx":"1","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/pages/App.tsx":"2","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/index.ts":"3","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/GlobalStyle.ts":"4","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/top/Header.tsx":"5","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/Combine.tsx":"6","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/ModalState.ts":"7","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Login.ts":"8","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/PrivateClip.tsx":"9","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/PublicClip.tsx":"10","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/Inbox.tsx":"11","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/KanbanBoard.tsx":"12","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/ClipAddButton.tsx":"13","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/useModal.tsx":"14","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/useInput.tsx":"15","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Title.ts":"16","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Url.ts":"17","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Discription.ts":"18","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/Clip.tsx":"19","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Input.ts":"20","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/PrivateClip.ts":"21","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/usePrivateClip.tsx":"22","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/LoginGoogle.tsx":"23","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/CreateProject.tsx":"24"},{"size":627,"mtime":1612766095068,"results":"25","hashOfConfig":"26"},{"size":491,"mtime":1612027214616,"results":"27","hashOfConfig":"26"},{"size":529,"mtime":1612398185630,"results":"28","hashOfConfig":"26"},{"size":162,"mtime":1612027214615,"results":"29","hashOfConfig":"26"},{"size":291,"mtime":1612398185626,"results":"30","hashOfConfig":"26"},{"size":640,"mtime":1612398185626,"results":"31","hashOfConfig":"26"},{"size":678,"mtime":1612027214618,"results":"32","hashOfConfig":"26"},{"size":624,"mtime":1612027214618,"results":"33","hashOfConfig":"26"},{"size":1625,"mtime":1612779272888,"results":"34","hashOfConfig":"26"},{"size":352,"mtime":1612027214617,"results":"35","hashOfConfig":"26"},{"size":1812,"mtime":1612027214616,"results":"36","hashOfConfig":"26"},{"size":1849,"mtime":1612027214616,"results":"37","hashOfConfig":"26"},{"size":2797,"mtime":1612398185625,"results":"38","hashOfConfig":"26"},{"size":551,"mtime":1612027214618,"results":"39","hashOfConfig":"26"},{"size":1048,"mtime":1612398185627,"results":"40","hashOfConfig":"26"},{"size":476,"mtime":1612398185629,"results":"41","hashOfConfig":"26"},{"size":450,"mtime":1612398185629,"results":"42","hashOfConfig":"26"},{"size":554,"mtime":1612398185628,"results":"43","hashOfConfig":"26"},{"size":4197,"mtime":1612780505904,"results":"44","hashOfConfig":"26"},{"size":1034,"mtime":1612353275090,"results":"45","hashOfConfig":"26"},{"size":2330,"mtime":1612768856606,"results":"46","hashOfConfig":"26"},{"size":976,"mtime":1612768865240,"results":"47","hashOfConfig":"26"},{"size":920,"mtime":1612027214615,"results":"48","hashOfConfig":"26"},{"size":2864,"mtime":1612398185625,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"yka4di",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/index.tsx",[],["103","104"],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/pages/App.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/index.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/GlobalStyle.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/top/Header.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/Combine.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/ModalState.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Login.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/PrivateClip.tsx",["105","106"],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/PublicClip.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/Inbox.tsx",["107","108"],"import React, { useState } from 'react';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\"\nimport axios from 'axios';\n\n\nconst Inbox = () => {\n    const [addData, setAddData] = useState(2);\n    const [prevData, setPrevData] = useState(0);\n    const [data, setData] = useState(addData); // 2 or 4\n    const [hasMore, setHasMore] = useState(true);\n    const [items, setItems] = useState([] as any);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            axios.get(`https://koreanjson.com/todos`)\n                .then((res) => {\n                    let fourData = res.data.slice(prevData, data);\n                    setItems([...items, ...fourData]);\n                    setPrevData(prevData + addData);\n                    setData(data + addData);\n                })\n        }, 1000);\n    }\n    return (\n        <InboxGrid style={{ overflow: \"scroll\" }} id=\"scrollInbox\">\n            {/* 이 공간이 채워져야 스크롤이 생깁니다. */}\n            <InfiniteScroll\n                dataLength={items.length} //This is important field to render the next data\n                next={fetchMoreData}\n                hasMore={hasMore}\n                loader={<h4>Loading...</h4>}\n                scrollableTarget=\"scrollInbox\"\n            >\n                {items && items.map((data: object | any, i: number) => {\n                    let title = data.title;\n                    return (\n                        <div key={i}>\n                            {title}\n                        </div>\n                    )\n                })}\n            </InfiniteScroll>\n        </InboxGrid>\n    );\n};\n\n\nconst InboxGrid = styled.section`\n    grid-column: 1;\n    grid-row: 2/3;\n    border: 1px solid;\n    border-color: green;\n`\n\nexport default Inbox;","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/templates/contents/KanbanBoard.tsx",["109","110"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport styled from 'styled-components'\n\n\nconst KanbanBoard = () => {\n    const [addData, setAddData] = useState(2);\n    const [prevData, setPrevData] = useState(0);\n    const [data, setData] = useState(addData); // 2 or 4\n    const [hasMore, setHasMore] = useState(true);\n    const [items, setItems] = useState([] as any);\n\n    const fetchMoreData = () => {\n        setTimeout(() => {\n            axios.get(`https://koreanjson.com/todos`)\n                .then((res) => {\n                    let fourData = res.data.slice(prevData, data);\n                    setItems([...items, ...fourData]);\n                    setPrevData(prevData + addData);\n                    setData(data + addData);\n                })\n        }, 1000);\n    }\n    return (\n        <KanbanBoardGrid style={{ overflow: \"scroll\" }} id=\"scrollHeader\">\n            {/* 이 공간이 채워져야 스크롤이 생깁니다. */}\n            <InfiniteScroll\n                dataLength={items.length} //This is important field to render the next data\n                next={fetchMoreData}\n                hasMore={hasMore}\n                loader={<h4>Loading...</h4>}\n                scrollableTarget=\"scrollHeader\"\n            >\n                {items && items.map((data: object | any, i: number) => {\n                    let title = data.title;\n                    return (\n                        <div key={i}>\n                            {title}\n                        </div>\n                    )\n                })}\n            </InfiniteScroll>\n        </KanbanBoardGrid>\n    );\n};\n\n\nconst KanbanBoardGrid = styled.section`\n    grid-column: 2;\n    grid-row: 2/3;\n    border: 1px solid;\n    border-color: pink;\n    \n`\n\nexport default KanbanBoard;\n","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/ClipAddButton.tsx",["111","112","113"],"import React, { useState } from \"react\";\nimport useModal from \"../../hooks/useModal\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nimport useInput from \"../../hooks/useInput\";\nimport usePrivateClip from \"../../hooks/usePrivateClip\";\n\nModal.setAppElement(\"#root\");\n\ninterface Input {\n  id: number;\n  title: string;\n  url: string;\n  discription: string;\n}\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nconst ClipAddButton = () => {\n  const { isOpen, onOpen, onClose } = useModal();\n  const { privateClipArr, addPrivateClip } = usePrivateClip();\n  const {\n    titleState,\n    urlState,\n    discriptionState,\n    makeTitle,\n    makeUrl,\n    makeDiscription,\n  } = useInput();\n  const [switchClip, setSwitchClip] = useState(false);\n\n  const onClick = () => {\n    const obj = {\n      id: 1,\n      title: titleState,\n      url: urlState,\n      discription: discriptionState,\n    };\n    addPrivateClip(obj);\n    onClose();\n  };\n  const openModal = () => {\n    onOpen();\n    makeTitle(\"\");\n    makeUrl(\"\");\n    makeDiscription(\"\");\n  };\n\n  const onChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"title\") {\n      makeTitle(value);\n    } else if (name === \"url\") {\n      makeUrl(value);\n    } else if (name === \"discription\") {\n      makeDiscription(value);\n    }\n  };\n\n  return (\n    <>\n      <button onClick={openModal}>+</button>\n      <Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n        <div>Add modal</div>\n        <button\n          onClick={() => {\n            setSwitchClip(!switchClip);\n          }}\n        >\n          스위치\n        </button>\n        {switchClip ? (\n          <div>\n            <div>\n              <input\n                placeholder=\"Memo\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              <input\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={onChange}\n              ></input>\n            </div>\n            <div>\n              <input name=\"url\" placeholder=\"Url\" onChange={onChange}></input>\n            </div>\n            <div>\n              <input\n                placeholder=\"Discription\"\n                name=\"discription\"\n                onChange={onChange}\n              ></input>\n            </div>\n          </div>\n        )}\n\n        <button onClick={onClose}>취소</button>\n        <button onClick={onClick}>생성</button>\n      </Modal>\n    </>\n  );\n};\nconst Clip = styled.div`\n  border: 1px solid;\n  border-color: green;\n`;\nexport default ClipAddButton;\n","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/useModal.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/useInput.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Title.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Url.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Discription.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/Clip.tsx",["114","115"],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/Input.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/modules/PrivateClip.ts",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/hooks/usePrivateClip.tsx",[],"/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/LoginGoogle.tsx",["116","117"],"import React from 'react';\nimport { GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport axios from 'axios';\nimport * as dotenv from 'dotenv';\ndotenv.config();\n\nconst LoginGoogle = () => {\n    const responseGoogle = (res: GoogleLoginResponse | GoogleLoginResponseOffline): void => {\n        if ('googleId' in res) {\n            const profile = res.getBasicProfile()\n            console.log(res.profileObj)\n        }\n    }\n    const responseFailGoogle = (err: any): void => {\n        console.log(err)\n    }\n    return (\n        <div>\n            <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENTID!}\n                buttonText=\"Google login\"\n                onSuccess={responseGoogle}\n                onFailure={responseFailGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n        </div>\n    );\n};\n\nexport default LoginGoogle;","/Users/donghun/Documents/DH/Developer/sideProjects/Clip/client/src/components/atoms/CreateProject.tsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":28},{"ruleId":"122","severity":1,"message":"126","line":1,"column":30,"nodeType":"124","messageId":"125","endLine":1,"endColumn":38},{"ruleId":"122","severity":1,"message":"127","line":8,"column":21,"nodeType":"124","messageId":"125","endLine":8,"endColumn":31},{"ruleId":"122","severity":1,"message":"128","line":11,"column":21,"nodeType":"124","messageId":"125","endLine":11,"endColumn":31},{"ruleId":"122","severity":1,"message":"127","line":8,"column":21,"nodeType":"124","messageId":"125","endLine":8,"endColumn":31},{"ruleId":"122","severity":1,"message":"128","line":11,"column":21,"nodeType":"124","messageId":"125","endLine":11,"endColumn":31},{"ruleId":"122","severity":1,"message":"129","line":10,"column":11,"nodeType":"124","messageId":"125","endLine":10,"endColumn":16},{"ruleId":"122","severity":1,"message":"130","line":29,"column":11,"nodeType":"124","messageId":"125","endLine":29,"endColumn":25},{"ruleId":"122","severity":1,"message":"131","line":118,"column":7,"nodeType":"124","messageId":"125","endLine":118,"endColumn":11},{"ruleId":"122","severity":1,"message":"132","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":16},{"ruleId":"122","severity":1,"message":"133","line":72,"column":9,"nodeType":"124","messageId":"125","endLine":72,"endColumn":16},{"ruleId":"122","severity":1,"message":"134","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"135","line":10,"column":19,"nodeType":"124","messageId":"125","endLine":10,"endColumn":26},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setAddData' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","'Input' is defined but never used.","'privateClipArr' is assigned a value but never used.","'Clip' is assigned a value but never used.","'useModal' is defined but never used.","'opacity' is assigned a value but never used.","'axios' is defined but never used.","'profile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

